name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: debtease_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        cd server
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Run database migrations
      run: |
        cd server
        python -c "
        import asyncio
        from app.databases.migrations.migration_runner import run_migrations
        import asyncpg

        async def setup_test_db():
            conn = await asyncpg.connect(
                host='localhost',
                port=5432,
                user='postgres',
                password='postgres',
                database='debtease_test'
            )
            await run_migrations(conn)
            await conn.close()

        asyncio.run(setup_test_db())
        "

    - name: Run linting
      run: |
        cd server
        flake8 app test --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app test --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Run type checking
      run: |
        cd server
        mypy app --ignore-missing-imports

    - name: Run tests with coverage
      run: |
        cd server
        pytest --cov=app --cov-report=xml --cov-report=html --cov-report=term-missing --cov-fail-under=80 -v

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./server/coverage.xml
        flags: backend
        name: backend-coverage

  security-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install security tools
      run: |
        cd server
        pip install bandit[sarif]

    - name: Run security scan
      run: |
        cd server
        bandit -r app -f sarif -o bandit-results.sarif

    - name: Upload SARIF file
      uses: github/codecov/codecov-action@v3
      if: success()
      with:
        file: ./server/bandit-results.sarif

  performance-test:
    runs-on: ubuntu-latest
    needs: test

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: debtease_perf
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        cd server
        pip install -e .[dev]

    - name: Run performance tests
      run: |
        cd server
        pytest test/test_performance.py -v --tb=short --durations=10

  e2e-test:
    runs-on: ubuntu-latest
    needs: test

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: debtease_e2e
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        cd server
        pip install -e .[dev]

    - name: Run end-to-end tests
      run: |
        cd server
        pytest test/test_e2e_workflows.py -v --tb=short
